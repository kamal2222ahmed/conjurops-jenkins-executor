server {
    listen <%= @local_hostname %>:80;

    proxy_set_header Host           $http_host;
    proxy_set_header X-Real-IP      $remote_addr;
    proxy_set_header Authorization  "";

    # Set up an internal location to proxy to the conjur authn service to authenticate
    # tokens
    location = /conjur/authn {
        # Use google's dns to resolve our host
        resolver 8.8.8.8;

        # Only allow internal requests
        internal;

        # Set the conjur_login nginx var to a value passed in the request ctx
        set_by_lua $conjur_login 'return ngx.ctx.login or error("no login passed in ctx")';

        # Turn off passing request headers
        proxy_pass_request_headers off;

        # pass to conjur authn service
        proxy_pass '<%= @appliance_url %>/users/$conjur_login/authenticate';
    }

    # This is the forwarding proxy. It sets the authorization header to
    # a conjur authn token, possibly refreshing it in the proccess.
    location / {
        # Use google's dns to resolve our host
        resolver 8.8.8.8;

        rewrite_by_lua 'conjur.authenticate_host()';

        proxy_pass <%= @registry_url_ci %>$request_uri;
        proxy_set_header    Host  $host;
        proxy_read_timeout  900;

        # Only allow local connections here.
        allow 127.0.0.1;
        deny all;
    }
}
